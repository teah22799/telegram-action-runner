name: Telegram Post Scheduler

on:
  # به شما اجازه می‌دهد این workflow را به صورت دستی از تب Actions اجرا کنید
  workflow_dispatch:

  schedule:
    # هر ۱۵ دقیقه یک بار اجرا می‌شود
    - cron: '*/15 * * * *'

# این بخش تضمین می‌کند که در هر لحظه فقط یک نمونه از این workflow اجرا شود
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  run-telegram-script:
    runs-on: ubuntu-latest
    
    steps:
      # مرحله ۱: چک‌اوت کردن ریپازیتوری عمومی (حاوی کد و رسانه‌ها)
      - name: Checkout Action Repo
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_PAT }}

      # مرحله ۲: چک‌اوت کردن ریپازیتوری خصوصی (حاوی داده‌ها)
      - name: Checkout State Repo
        uses: actions/checkout@v4
        with:
          repository: ${{ vars.STATE_REPO }}
          token: ${{ secrets.GH_PAT }}
          path: state-repo

      # مرحله ۳: تنظیم محیط پایتون
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      # مرحله ۴: نصب نیازمندی‌ها
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # مرحله ۵: اجرای اسکریپت پایتون
      - name: Run Python Script
        env:
          API_ID: ${{ secrets.API_ID }}
          API_HASH: ${{ secrets.API_HASH }}
          TELETHON_SESSION: ${{ secrets.TELETHON_SESSION }}
          
          SOURCE_CHANNELS: ${{ vars.SOURCE_CHANNELS }}
          DESTINATION_CHANNEL: ${{ vars.DESTINATION_CHANNEL }}
          PUBLISHER_NAME: ${{ vars.PUBLISHER_NAME }}
          
          SCHEDULE_INTERVAL_MINUTES: ${{ vars.SCHEDULE_INTERVAL_MINUTES }}
          
          # --- جدید: متغیر جدید برای تعیین زمان انقضا ---
          # این مقدار را می‌توانید در بخش Variables ریپازیتوری خود تنظیم کنید.
          # اگر تنظیم نشود، اسکریپت از مقدار پیش‌فرض (۴ ساعت) استفاده خواهد کرد.
          STATUS_TIMEOUT_HOURS: ${{ vars.STATUS_TIMEOUT_HOURS }}
        run: python main.py

      # مرحله ۶: کامیت و پوش کردن فایل‌های رسانه‌ای در ریپازیتوری عمومی
      - name: Commit and Push Media Files (Action Repo)
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add media/
          # کامیت کردن فقط در صورتی که تغییری وجود داشته باشد
          git diff-index --quiet HEAD || git commit -m "Update media files [skip ci]"
          # قبل از پوش، آخرین تغییرات را می‌گیریم تا از تداخل جلوگیری شود
          git pull --rebase
          git push

      # مرحله ۷: کامیت و پوش کردن فایل‌های وضعیت در ریپازیتوری خصوصی
      - name: Commit and Push State Files (State Repo)
        run: |
          cd state-repo
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add -A
          git diff-index --quiet HEAD || git commit -m "Update state files"
          git pull --rebase
          git push
